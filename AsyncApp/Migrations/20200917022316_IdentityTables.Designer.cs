// <auto-generated />
using AsyncApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncApp.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20200917022316_IdentityTables")]
    partial class IdentityTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncApp.Models.Amenity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "WiFi"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Air Conditioning"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Coffee Maker"
                        });
                });

            modelBuilder.Entity("AsyncApp.Models.Hotel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            City = "Des Moines",
                            Name = "Async Inn",
                            PetFriendly = false,
                            Phone = "515-555-1234",
                            Rate = 0m,
                            RoomId = 0L,
                            State = "Iowa",
                            StreetAdress = "123 Sync Street"
                        },
                        new
                        {
                            Id = 2L,
                            City = "Ames",
                            Name = "Async Motel",
                            PetFriendly = false,
                            Phone = "515-294-1111",
                            Rate = 0m,
                            RoomId = 0L,
                            State = "Iowa",
                            StreetAdress = "1858 Cyclone Lane"
                        },
                        new
                        {
                            Id = 3L,
                            City = "Pleasant Hill",
                            Name = "Async Suites",
                            PetFriendly = false,
                            Phone = "515-299-1234",
                            Rate = 0m,
                            RoomId = 0L,
                            State = "Iowa",
                            StreetAdress = "5050 Morning Star Court"
                        });
                });

            modelBuilder.Entity("AsyncApp.Models.HotelRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("HotelId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("money");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("AsyncApp.Models.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Layout = 0,
                            Name = "Studio"
                        },
                        new
                        {
                            Id = 2L,
                            Layout = 1,
                            Name = "OneBedroom"
                        },
                        new
                        {
                            Id = 3L,
                            Layout = 2,
                            Name = "TwoBedroom"
                        });
                });

            modelBuilder.Entity("AsyncApp.Models.RoomAmenity", b =>
                {
                    b.Property<long>("AmenityId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.HasKey("AmenityId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncApp.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncApp.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncApp.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsyncApp.Models.RoomAmenity", b =>
                {
                    b.HasOne("AsyncApp.Models.Amenity", "Amenity")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncApp.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
